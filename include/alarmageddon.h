#ifndef ALARMAGEDDON_H
#define ALARMAGEDDON_H

#include <Adafruit_SSD1306.h>
#include <Arduino.h>
#include <ESP32Encoder.h>
#include <esp_now.h>
#include <WiFi.h>
// #include <time.h>

// forward declarations for screen classes
class MenuScreen;
class ClockScreen;
class AlarmScreen;
class WifiScreen;
class SetScreen;
class ApListScreen;
class PasswordScreen;

// extern globals from main
extern const unsigned short titleSize;
extern const unsigned short screenWidth;
extern const unsigned short screenHeight;
extern Adafruit_SSD1306 display;
extern tm timeData;
extern unsigned short screenIndex;
extern MenuScreen *container[6];
// extern const char* ssid;
// extern const char* password;

// helper functions
int getCenteredCursorX(const char *text);
int getCenteredCursorFormattedX(unsigned short bufferSize, const char *text, ...);
void printfCenteredTextX(unsigned short bufferSize, const char *text, ...);
void printCenteredTextX(const char *text, bool newLine = false);
void printButton(short padding, short radius, const char *text);
// void printSelector(short y);

// base class
class MenuScreen
{
public:
    virtual ~MenuScreen() {};
    virtual void setup() = 0;
    virtual void loop() = 0;
    virtual void render() = 0;
    virtual void left() = 0;
    virtual void right() = 0;
    virtual void select() = 0;
    bool buttonPressed = false;
};

// sub classes
class ClockScreen : public MenuScreen
{
private:
    unsigned long clockMillis;
    const char *getDayOfWeekName(int day);

public:
    void setup() override;
    void loop() override;
    void render() override;
    void left() override;
    void right() override;
    void select() override;
};

class AlarmScreen : public MenuScreen
{
public:
    void setup() override;
    void loop() override;
    void render() override;
    void left() override;
    void right() override;
    void select() override;
};

class WifiScreen : public MenuScreen
{
private:
    wl_status_t wifiStatus;
    wl_status_t wifiStatusPrevious;

public:
    void setup() override;
    void loop() override;
    void render() override;
    void left() override;
    void right() override;
    void select() override;
};

class SetScreen : public MenuScreen
{
private:
    const unsigned char epd_bitmap_weightoftheworldSMOL[1024] PROGMEM = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x3e, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xbc, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x22, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x9b, 0x79, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x40, 0x04, 0xfb, 0x60, 0x01, 0x6d, 0x90, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xb4, 0x00, 0x40, 0x00, 0x00, 0x3c, 0x03, 0x49, 0x64, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x04, 0x01, 0x60, 0xf0, 0x00, 0x01, 0xce, 0x40, 0x18, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x0b, 0xff, 0xf0, 0x0c, 0x00, 0x00, 0x51, 0x21, 0x06, 0x00,
        0x00, 0x00, 0x00, 0x01, 0x90, 0x0f, 0xbb, 0xfe, 0xc0, 0x07, 0xfd, 0x00, 0x10, 0x00, 0x25, 0x00,
        0x00, 0x01, 0xc0, 0x06, 0x00, 0x00, 0x03, 0x0d, 0x13, 0x70, 0x03, 0x70, 0xa0, 0x92, 0x09, 0x00,
        0x00, 0x06, 0x30, 0x68, 0x00, 0x00, 0x10, 0xe1, 0x88, 0x00, 0x00, 0x0c, 0x08, 0x00, 0x81, 0x80,
        0x00, 0x0c, 0x1b, 0xc0, 0x00, 0x00, 0x10, 0xe3, 0x8c, 0x00, 0x00, 0x00, 0x40, 0x40, 0x24, 0x00,
        0x00, 0x30, 0x0e, 0x00, 0x00, 0x00, 0x20, 0x48, 0x03, 0x00, 0x00, 0x00, 0x60, 0x04, 0x01, 0x00,
        0x00, 0xc0, 0x04, 0x1c, 0x07, 0xc0, 0x60, 0x11, 0x01, 0x1a, 0x03, 0x00, 0x08, 0x10, 0x40, 0x80,
        0x00, 0xc0, 0x04, 0x03, 0xb0, 0x00, 0x40, 0x10, 0x41, 0x0f, 0x20, 0xe0, 0x40, 0x42, 0x10, 0x80,
        0x03, 0x00, 0x06, 0x00, 0x60, 0x09, 0x00, 0x20, 0x46, 0x00, 0x64, 0x30, 0x44, 0x08, 0x03, 0x00,
        0x06, 0x00, 0x02, 0x01, 0x01, 0xec, 0x60, 0x20, 0x04, 0x00, 0x09, 0x0c, 0x20, 0x00, 0x00, 0x80,
        0x04, 0x00, 0x01, 0x02, 0x01, 0x80, 0x38, 0x00, 0x20, 0x09, 0x00, 0x06, 0x12, 0x00, 0x00, 0x80,
        0x08, 0x00, 0x01, 0x06, 0x02, 0x00, 0x09, 0x50, 0x64, 0xee, 0xc0, 0x01, 0x00, 0x04, 0x12, 0x00,
        0x18, 0x00, 0x01, 0x84, 0x00, 0x00, 0x09, 0x16, 0x84, 0x00, 0x3b, 0x00, 0x61, 0x01, 0x01, 0x90,
        0x10, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x00, 0xe0, 0x10, 0x40, 0x80, 0x40,
        0x20, 0x00, 0x00, 0x90, 0x01, 0xbe, 0x08, 0x00, 0x04, 0x00, 0x00, 0x18, 0x90, 0x04, 0x82, 0x40,
        0x20, 0x00, 0x00, 0xc0, 0x00, 0x04, 0xe4, 0x00, 0x11, 0x66, 0x60, 0x00, 0x88, 0x00, 0x00, 0x30,
        0x60, 0x00, 0x00, 0x40, 0x00, 0x00, 0x04, 0x0b, 0xd3, 0x25, 0x9c, 0x00, 0x20, 0x01, 0x00, 0x10,
        0x60, 0x00, 0x00, 0x40, 0x1f, 0x03, 0x33, 0x68, 0x04, 0x00, 0x0b, 0xe1, 0x10, 0x00, 0x02, 0x14,
        0x21, 0x80, 0x00, 0x64, 0xe0, 0x79, 0x04, 0x00, 0x04, 0x00, 0x0b, 0x3f, 0x00, 0x80, 0x10, 0x18,
        0x27, 0x00, 0x00, 0x23, 0x09, 0x80, 0x04, 0x85, 0xb2, 0x00, 0x09, 0x00, 0xe2, 0x21, 0x00, 0x08,
        0x3c, 0x00, 0x00, 0x28, 0x26, 0x00, 0x1a, 0x41, 0x09, 0x00, 0x12, 0x00, 0x20, 0x00, 0x22, 0x28,
        0x30, 0x00, 0x00, 0x23, 0xf8, 0x00, 0x1b, 0x10, 0x21, 0x80, 0x12, 0x00, 0x20, 0x00, 0x18, 0x20,
        0x10, 0x00, 0x00, 0x1e, 0x8c, 0x00, 0x21, 0xc0, 0xc4, 0xc0, 0x36, 0x00, 0x64, 0x40, 0x08, 0x08,
        0x18, 0x00, 0x00, 0x18, 0xa6, 0x00, 0x24, 0x60, 0x92, 0x40, 0x24, 0x00, 0x10, 0x00, 0x02, 0x48,
        0x08, 0x00, 0x00, 0x30, 0x43, 0x00, 0x64, 0x9d, 0x22, 0x60, 0x34, 0x00, 0x10, 0x24, 0x00, 0x10,
        0x04, 0x00, 0x00, 0x10, 0x49, 0x00, 0xc1, 0x84, 0x08, 0x30, 0x24, 0x00, 0x10, 0x22, 0x24, 0x50,
        0x06, 0x00, 0x00, 0x10, 0x31, 0x80, 0xb1, 0x11, 0x89, 0x18, 0x6c, 0x00, 0x08, 0x00, 0x00, 0x10,
        0x01, 0x80, 0x00, 0x20, 0x16, 0xc1, 0x24, 0x98, 0x21, 0x0e, 0x44, 0x00, 0x2c, 0x10, 0x10, 0x80,
        0x00, 0xe0, 0x00, 0xe0, 0x10, 0x47, 0x24, 0x81, 0x14, 0x43, 0x54, 0x00, 0x04, 0x12, 0x12, 0x60,
        0x00, 0x3b, 0x37, 0x80, 0x09, 0x24, 0x90, 0x11, 0x91, 0x30, 0x94, 0x00, 0x06, 0x00, 0x00, 0x40,
        0x00, 0x01, 0xd0, 0x00, 0x04, 0x9a, 0x0c, 0xcc, 0x11, 0x8c, 0x28, 0x00, 0x01, 0x80, 0x05, 0x80,
        0x00, 0x00, 0x00, 0x00, 0x06, 0x42, 0x26, 0x01, 0x14, 0xc5, 0x28, 0x00, 0x01, 0x80, 0x86, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x03, 0x25, 0x34, 0xd0, 0x41, 0x31, 0x00, 0x00, 0x00, 0x64, 0x38, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x8a, 0xc4, 0x4c, 0x91, 0x1c, 0x50, 0x00, 0x01, 0x37, 0x20, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x84, 0x01, 0x85, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x02, 0x48, 0x41, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x48, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xc0, 0x91, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x48, 0x88, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x48, 0xa4, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x4a, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x88, 0x88, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x8a, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x22, 0x62, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x48, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x4a, 0x08, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x44, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

public:
    void setup() override;
    void loop() override;
    void render() override;
    void left() override;
    void right() override;
    void select() override;
};

class ApListScreen : public MenuScreen
{
private:
    unsigned short selectedIndex = 0;
    unsigned short topIndex = 0;
    char ssidBuffer[16][17];
    short length;
#if defined(HEIGHT_64)
    unsigned short visibleCount = 7;
#else
    unsigned short visibleCount = 3;
#endif
    short scanStatus = -2;
    short scanStatusPrevious = -2;
    int min(int a, int b);
    void populateList();

public:
    void setup() override;
    void loop() override;
    void render() override;
    void left() override;
    void right() override;
    void select() override;
};

class PasswordScreen : public MenuScreen
{
private:
    // const char charList[48] = "1234567890-=[];',./\\\nabcdefghijklmnopqrstuvwxyz";
    // const char charListShifted[48] = "!@#$%^&*()_+{}:\"<>?|\nABCDEFGHIJKLMNOPQRSTUVWXYZ";
    const char charList[48] = "abcdefghijklmnopqrstuvwxyz1234567890-=[];',./\\";
    const char charListShifted[48] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()_+{}:\"<>?|";
    char charListButtons[3][10] = {"Space", "Backspace", "Shift"};
    char charListNavigation[2][7] = {"Accept", "Back"};
    static constexpr short visibleCharCount = 10;
    short charListScroll = 0;
    short selectedIndex = 0;
    bool isShifted = false;
    char password[64];
    short passwordIndex = 0;
    bool backspace = false;

public:
    void setup() override;
    void loop() override;
    void render() override;
    void left() override;
    void right() override;
    void select() override;
};

#endif // ALARMAGEDDON_H
